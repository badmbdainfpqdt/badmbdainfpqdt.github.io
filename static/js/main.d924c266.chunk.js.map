{"version":3,"sources":["hoc/Layout/Layout.module.css","components/UI/Header/Header.module.css","components/UI/Image/Image.module.css","components/UI/Button/Button.module.css","assets/images/fundo.png","hoc/NoDiv.js","components/UI/Header/Header.js","components/UI/Image/Image.js","components/UI/Button/Button.js","components/Main/Main.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","header","className","classes","Header","image","Image","src","source","alt","text","button","action","link","Button","main","bgimage","layout","Main","Footer","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,KAAO,qBAAqB,OAAS,yB,kBCAzFD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCD3BD,EAAOC,QAAU,IAA0B,mC,iJCI5BC,G,MAJH,SAACC,GAAD,OACRA,EAAMC,W,gBCSKC,EAPA,kBACX,4BACIC,UAAWC,IAAQC,QACnB,oD,gBCIOC,EAPD,SAACN,GAAD,OACV,yBACIG,UAAWC,IAAQG,MACnBC,IAAKR,EAAMS,OACXC,IAAKV,EAAMW,Q,gBCIJC,EARA,SAACZ,GAAD,OACX,0BAAMa,OAAQb,EAAMc,MAChB,4BACIX,UAAWC,IAAQW,QACjBf,EAAMC,Y,gBCaLe,EAbF,WACT,OACI,kBAAC,EAAD,KACI,kBAACT,EAAD,CACIE,OAAQQ,IACRN,KAAK,wBACL,kBAACI,EAAD,CACID,KAAK,sBADT,W,gBCKDI,EAZA,kBACX,kBAAC,EAAD,KACI,kBAACb,EAAD,MACA,0BAAMF,UAAWC,IAAQe,MAAM,kBAACA,EAAD,OAC/B,4BACIhB,UAAWC,IAAQgB,QACf,+CACA,qD,MCDDC,MARf,WACE,OACE,yBAAKlB,UAAU,OACb,kBAACmB,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d924c266.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Layout_Toolbar__3TGvu\",\"Main\":\"Layout_Main__Lvd6v\",\"Footer\":\"Layout_Footer__18XUy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__21sIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Image_Image__1ghT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1VIaN\"};","module.exports = __webpack_public_path__ + \"static/media/fundo.a0ae19d0.png\";","const aux = (props) => (\r\n    props.children\r\n);\r\n\r\nexport default aux;","import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst header = () => (\r\n    <header \r\n        className={classes.Header}>\r\n        <h1>B Adm Bda Inf Pqdt</h1>\r\n        </header>\r\n);\r\n\r\nexport default header;","import React from 'react';\r\nimport classes from './Image.module.css';\r\n\r\nconst image = (props) => (\r\n    <img\r\n        className={classes.Image}\r\n        src={props.source}\r\n        alt={props.text} />\r\n);\r\n\r\nexport default image;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <form action={props.link}>\r\n        <button \r\n            className={classes.Button}\r\n            >{props.children}</button>\r\n    </form>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Image from '../UI/Image/Image';\r\nimport Aux from '../../hoc/NoDiv';\r\nimport Button from '../UI/Button/Button';\r\nimport bgimage from '../../assets/images/fundo.png';\r\n\r\n\r\nconst main = () => {\r\n    return(\r\n        <Aux>\r\n            <Image \r\n                source={bgimage}\r\n                text=\"Base Administrativa\" />\r\n                <Button \r\n                    link=\"http://10.2.75.200\"\r\n                    >SRAET</Button>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default main;","import React from 'react';\r\nimport Aux from '../NoDiv';\r\nimport Header from '../../components/UI/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport classes from './Layout.module.css';\r\n\r\nconst layout = () => (\r\n    <Aux>\r\n        <Header />\r\n        <main className={classes.Main}><Main /></main>\r\n        <footer \r\n            className={classes.Footer} >\r\n                <h2>1ยบ Ten Mauro</h2>\r\n                <h4>Gestor de Sistemas</h4>\r\n            </footer>\r\n    </Aux>\r\n    );\r\n\r\nexport default layout;","import React from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}